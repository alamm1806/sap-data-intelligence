{
   "apiVersion": "template.openshift.io/v1",
   "kind": "Template",
   "message": "TODO",
   "metadata": {
      "annotations": {
         "description": "TODO",
         "openshift.io/display-name": "TODO",
         "openshift.io/documentation-url": "https://access.redhat.com/articles/4324391",
         "openshift.io/provider-display-name": "Red Hat, Inc."
      },
      "name": "container-image-registry"
   },
   "objects": [
      {
         "apiVersion": "v1",
         "kind": "DeploymentConfig",
         "metadata": {
            "labels": {
               "deploymentconfig": "container-image-registry"
            },
            "name": "container-image-registry",
            "namespace": "${NAMESPACE}"
         },
         "spec": {
            "replicas": 1,
            "selector": {
               "deploymentconfig": "container-image-registry"
            },
            "strategy": {
               "type": "Rolling"
            },
            "template": {
               "metadata": {
                  "labels": {
                     "deploymentconfig": "container-image-registry"
                  }
               },
               "spec": {
                  "containers": [
                     {
                        "env": [ ],
                        "image": " ",
                        "name": "container-image-registry"
                     }
                  ],
                  "restartPolicy": "Always",
                  "serviceAccount": "container-image-registry",
                  "serviceAccountName": "container-image-registry"
               }
            },
            "triggers": [
               {
                  "type": "ConfigChange"
               },
               {
                  "imageChangeParams": {
                     "automatic": true,
                     "containerNames": [
                        "container-image-registry"
                     ],
                     "from": {
                        "kind": "ImageStreamTag",
                        "name": "container-image-registry:latest"
                     }
                  },
                  "type": "ImageChange"
               }
            ]
         }
      },
      {
         "apiVersion": "v1",
         "kind": "ServiceAccount",
         "metadata": {
            "labels": {
               "deploymentconfig": "container-image-registry"
            },
            "name": "container-image-registry",
            "namespace": "${NAMESPACE}"
         }
      },
      {
         "apiVersion": "build.openshift.io/v1",
         "kind": "BuildConfig",
         "metadata": {
            "labels": {
               "deploymentconfig": "container-image-registry"
            },
            "name": "container-image-registry",
            "namespace": "${NAMESPACE}"
         },
         "spec": {
            "output": {
               "to": {
                  "kind": "ImageStreamTag",
                  "name": "container-image-registry:latest"
               }
            },
            "runPolicy": "Serial",
            "source": {
               "dockerfile": "FROM openshift/ubi8:latest\n# docker-distribution is not yet available on UBI - install from fedora repo\n# RHEL8 / UBI8 is based on fedora 28\nENV FEDORA_BASE_RELEASE=28\nRUN curl -L -o /etc/pki/rpms-fedora.gpg \\\n  https://getfedora.org/static/fedora.gpg\nRUN /bin/bash -c 'for repo in base updates; do printf \"%s\\n\" \\\n    \"[fedora-$repo]\" \\\n    \"name=Fedora $FEDORA_BASE_RELEASE - $(uname -m) - ${repo^}\" \\\n    \"metalink=https://mirrors.fedoraproject.org/metalink?repo=fedora-$FEDORA_BASE_RELEASE&arch=$(uname -m)\" \\\n    \"enabled=0\" \\\n    \"countme=1\" \\\n    \"type=rpm\" \\\n    \"gpgcheck=0\" \\\n    \"priority=99\" \\\n    \"gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$FEDORA_BASE_RELEASE-$(uname -m)\" \\\n    \"skip_if_unavailable=False\" >/etc/yum.repos.d/fedora-$repo.repo; \\\n  done'\nRUN dnf update -y\n# install the GPG keys first, so we can enable GPG keys checking for\n# the package in question\nRUN dnf install -y \\\n  --enablerepo=fedora-base \\\n  --enablerepo=fedora-updates \\\n  fedora-gpg-keys\nRUN sed -i 's/^\\(gpgcheck=\\)0/\\11/' /etc/yum.repos.d/fedora-*.repo\nRUN dnf install -y \\\n  --enablerepo=fedora-base \\\n  --enablerepo=fedora-updates \\\n  docker-distribution\nRUN dnf clean all -y\nEXPOSE 5000\nENTRYPOINT [ \\\n  \"/usr/bin/registry\", \\\n  \"serve\", \"/etc/docker-distribution/registry/config.yml\"]\n"
            },
            "strategy": {
               "dockerStrategy": {
                  "from": {
                     "kind": "ImageStreamTag",
                     "name": "ubi8:latest"
                  },
                  "pullSecret": {
                     "name": "${REDHAT_REGISTRY_SECRET_NAME}"
                  }
               }
            },
            "triggers": [
               {
                  "type": "ImageChange"
               },
               {
                  "type": "ConfigChange"
               }
            ]
         }
      },
      {
         "apiVersion": "v1",
         "kind": "ImageStream",
         "metadata": {
            "name": "container-image-registry",
            "namespace": "${NAMESPACE}"
         },
         "spec": null,
         "status": {
            "dockerImageRepository": ""
         }
      },
      {
         "apiVersion": "v1",
         "kind": "Service",
         "metadata": {
            "annotations": {
               "template.openshift.io/expose-uri": "\"https://{.spec.clusterIP}:{.spec.ports[?(.name==\\\"registry\\\")].port)}\""
            },
            "name": "container-image-registry",
            "namespace": "${NAMESPACE}"
         },
         "spec": {
            "ports": [
               {
                  "name": "registry",
                  "port": 5000
               }
            ],
            "selector": {
               "deploymentconfig": "container-image-registry"
            },
            "sessionAffinity": "ClientIP",
            "type": "ClusterIP"
         }
      },
      {
         "apiVersion": "route.openshift.io/v1",
         "kind": "Route",
         "metadata": {
            "annotations": {
               "template.openshift.io/expose-uri": "https://{.spec.host}{.spec.path}"
            },
            "name": "container-image-registry",
            "namespace": "${NAMESPACE}"
         },
         "spec": {
            "host": "${HOSTNAME}",
            "port": {
               "targetPort": "registry"
            },
            "subdomain": "",
            "tls": {
               "insecureEdgeTerminationPolicy": "Redirect",
               "termination": "edge"
            },
            "to": {
               "kind": "Service",
               "name": "container-image-registry"
            }
         }
      },
      {
         "apiVersion": "v1",
         "kind": "PersistentVolumeClaim",
         "metadata": {
            "name": "container-image-registry",
            "namespace": "${NAMESPACE}"
         },
         "spec": {
            "accessModes": [
               "ReadWriteOnce"
            ],
            "resources": {
               "requests": {
                  "storage": "${VOLUME_CAPACITY}"
               }
            }
         }
      }
   ],
   "parameters": [
      {
         "description": "If set to true, no action will be performed. The pod will just print\nwhat would have been executed.\n",
         "name": "DRY_RUN",
         "required": false,
         "value": "false"
      },
      {
         "description": "The desired namespace to deploy resources to. Defaults to the current\none.\n",
         "name": "NAMESPACE",
         "required": true
      },
      {
         "description": "Name of the secret with credentials for registry.redhat.io registry. Please visit\nhttps://access.redhat.com/terms-based-registry/ to obtain the OpenShift secret. For\nmore details, please refer to https://access.redhat.com/RegistryAuthentication.'\n",
         "name": "REDHAT_REGISTRY_SECRET_NAME",
         "required": true
      },
      {
         "description": "Volume space available for container images (e.g. 75Gi).",
         "name": "VOLUME_CAPACITY",
         "required": true,
         "value": "75Gi"
      },
      {
         "name": "HTPASSWD_SECRET_NAME",
         "required": true,
         "value": "container-image-registry-htpasswd"
      },
      {
         "from": "[a-zA-Z0-9]{32}",
         "generage": "expression",
         "name": "REGISTRY_HTTP_SECRET"
      },
      {
         "description": "Desired domain name of the exposed registry service.'\n",
         "name": "HOSTNAME",
         "required": false
      }
   ]
}
